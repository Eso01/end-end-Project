name: CI/CD Pipeline

on: 
  push:
    branches:
      - main

  pull_request:
    branches:
      - main
jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install flake8 pytest
        
    - name: Lint with flake8
      run: flake8 src/ --max-line-length=120
      
    - name: Run tests
      run: pytest tests/ -v

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV

  build-and-push:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set Short SHA
      run: |
        echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
        echo "SHORT_SHA=${{ env.SHORT_SHA }}"
    - name: Build password-generator image
      run: |
        docker build -t eso001/password-generator:${{ env.SHORT_SHA }} .
    - name: Build reverse-service image
      run: |
        docker build -t eso001/reverse-service:${{ env.SHORT_SHA }} -f Dockerfile.reverse .
    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_TOKEN}}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
    - name: Push password-generator image
      run: |
        docker push eso001/password-generator:${{ env.SHORT_SHA }}
    - name: Push reverse-service image
      run: |
        docker push eso001/reverse-service:${{ env.SHORT_SHA }}


# Helm deployment (commented for simulation)
      # - name: Install/Upgrade Helm Chart
      #   run: |
      #     helm upgrade --install password-generator ./password-generator-chart \
      #       --set images.password.tag=${{ github.sha }} \
      #       --set images.reverse.tag=${{ github.sha }}